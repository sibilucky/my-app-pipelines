pipeline {
    agent any

    parameters {
        string(name: 'GIT_BRANCH', defaultValue: 'main', description: 'Git branch to build')
        string(name: 'TAG_NUMBER', defaultValue: 'v1.0.0', description: 'Version tag number')
        string(name: 'HOST_PORT', defaultValue: '8080', description: 'Port on the host machine')
    }

    environment {
        // GitHub repository URL
        GIT_URL = 'https://github.com/sibilucky/my-app-pipelines.git'
        // Credentials ID for the GitHub Personal Access Token (PAT)
        GIT_CREDENTIALS = credentials('github-credentials')  // Replace with your Jenkins credential ID
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // Checkout the repository and checkout the branch parameter
                    git branch: "${params.GIT_BRANCH}", url: "https://github.com/sibilucky/my-app-pipelines.git", credentialsId: 'github-credentials'
                }
            }
        }

        stage('Build') {
            steps {
                script {
                   
                    if (fileExists('pom.xml')) {
                        // If a Maven project, run Maven build
                        sh 'mvn clean install'  // For Maven-based project
                    }
                }
            }
        }

        stage('Push Tag') {
            steps {
                script {
                    // Use Jenkins credentials for GitHub authentication
                    withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'selvimuthusamy785@gmail.com', passwordVariable: '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')]) {
                        // Corrected git push command using variables for user and token
                        sh """
                            git push https://selvimuthusamy785@gmail.com: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@github.com/sibilucky/my-app-pipelines.git ${params.TAG_NUMBER} --force
                        """
                    }
                }
            }
        }



        stage('Deploy') {
            steps {
                script {
                    echo "Deploying to Docker..."
                    sh "docker build -t sibisam2301/maven:${params.TAG_NUMBER} ."
                    sh "docker push sibisam2301/maven:${params.TAG_NUMBER}"
                    sh "docker-compose up -d"
                   
                    }
                }
            }
    }
}

