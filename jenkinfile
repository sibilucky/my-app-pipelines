pipeline {
    agent any

    parameters {
        string(name: 'GIT_BRANCH', defaultValue: 'main', description: 'Git branch to build')
        string(name: 'TAG_NUMBER', defaultValue: 'v1.0.0', description: 'Version tag number')
        string(name: 'HOST_PORT', defaultValue: '8080', description: 'Port on the host machine')
    }

    environment {
        // GitHub repository URL
        GIT_URL = 'https://github.com/sibilucky/my-app-pipelines.git'
        // Credentials ID for the GitHub Personal Access Token (PAT)
        GIT_CREDENTIALS = credentials('github-credentials')  // Replace with your Jenkins credential ID
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // Checkout the repository and checkout the branch parameter
                    git branch: "${params.GIT_BRANCH}", url: "https://github.com/sibilucky/my-app-pipelines.git", credentialsId: 'github-credentials'
                }
            }
        }

        stage('Build') {
            steps {
                script {
                   
                    if (fileExists('pom.xml')) {
                        // If a Maven project, run Maven build
                        sh 'mvn clean install'  // For Maven-based project
                    }
                }
            }
        }

    stage('Tag Build') {
    steps {
        script {
            // Delete the local tag (if it exists)
            sh "git tag -d ${params.TAG_NUMBER} || true"
            
            // Create the tag again
            sh "git tag ${params.TAG_NUMBER}"

            // Use Jenkins credentials for GitHub authentication
            withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'selvimuthusamy785@gmail.com', passwordVariable: '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')]) {
                // Force push the tag to GitHub
               git push https://selvimuthusamy785@gmail.com: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/sibilucky/my-app-pipelines.git v1.0.0 --force }

            }
        }
    }
}


        stage('Deploy') {
            steps {
                script {
                    echo "Deploying to Docker..."

                    // Build Docker image with the tag name using the tag number from the parameters
                    sh "docker build -t sibisam2301/httpd:${params.TAG_NUMBER} ."

                    // Use Docker Hub credentials securely for pushing the image
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials-id', usernameVariable: 'sibisam2301@gmail.com', passwordVariable: 'devika@123')]) {
                        // Log in to Docker Hub before pushing the image
                        sh "docker login -u sibisam@gmail.com -p devika@123"

                        // Push the Docker image to Docker Hub (or other Docker registry)
                        sh "docker push sibisam2301/httpd:${params.TAG_NUMBER}"

                        // Optionally, deploy the container to a Docker host
                        // Example using SSH for remote deployment:
                        // sh "ssh user@your-server 'docker pull sibisam2301/httpd:${params.TAG_NUMBER} && docker run -d --name -p 7079 httpd sibisam2301/httpd:${params.TAG_NUMBER}'"
                    }
                }
            }
    }
}
}
